{"ast":null,"code":"var _jsxFileName = \"/Users/Dagi/Desktop/Web Projects/Resume Website /myresume/src/Components/GithubCards.js\";\nimport React, { Component } from \"react\";\nimport Axios from 'axios';\nimport baseURL from \"./github\";\nimport RepoCard from '.RepoCard';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GithubCards extends Component {\n  constructor() {\n    super(...arguments);\n    this.Title = [];\n    this.state = {\n      repo: [],\n      language: []\n    };\n  }\n\n  async componentDidMount() {\n    const api_key = process.env.React_APP_API_KEY;\n    let repo = [baseURL = 'Calculator', baseURL = 'UnivariateLinearRegression', baseURL = 'LeetCodeAlgorithmSolutions', baseURL = 'MotionDetection-OpenCV', baseURL = 'DrupalReact', baseURL = 'Thesis-Project-Hotel-Website ', baseURL = 'Fibonnacii-x86-Assembly-'];\n    await Axios.get(\"https://github-lang-deploy.herokuapp.com/\").then(async res => await this.setState({\n      language: res.data\n    }));\n    repo.map(async url => await Axios.get(url, {\n      headers: {\n        Authorization: `token ${api_key}`\n      }\n    }).then(async res => {\n      await this.setState({\n        repo: [...this.state.repo, res.data]\n      });\n    }));\n  }\n\n  render() {\n    const {\n      repo,\n      language\n    } = this.state;\n    repo.sort((a, b) => a.stargazers_count > b.stargazers_count ? -1 : b.stargazers_count > a.stargazers_count ? 1 : 0);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: repo.map((data, i) => /*#__PURE__*/_jsxDEV(RepoCard, {\n        repo: data,\n        language: language\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default GithubCards;","map":{"version":3,"sources":["/Users/Dagi/Desktop/Web Projects/Resume Website /myresume/src/Components/GithubCards.js"],"names":["React","Component","Axios","baseURL","RepoCard","Grid","GithubCards","Title","state","repo","language","componentDidMount","api_key","process","env","React_APP_API_KEY","get","then","res","setState","data","map","url","headers","Authorization","render","sort","a","b","stargazers_count","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB,EADwB;AAAA,SAEhCC,KAFgC,GAExB;AACJC,MAAAA,IAAI,EAAC,EADD;AAEJC,MAAAA,QAAQ,EAAC;AAFL,KAFwB;AAAA;;AAQT,QAAjBC,iBAAiB,GAAE;AACrB,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,QAAIN,IAAI,GAAG,CACPN,OAAO,GAAG,YADH,EAEPA,OAAO,GAAG,4BAFH,EAGPA,OAAO,GAAG,4BAHH,EAIPA,OAAO,GAAG,wBAJH,EAKPA,OAAO,GAAG,aALH,EAMPA,OAAO,GAAG,+BANH,EAOPA,OAAO,GAAG,0BAPH,CAAX;AAUA,UAAMD,KAAK,CAACc,GAAN,CAAU,2CAAV,EAAuDC,IAAvD,CACF,MAAOC,GAAP,IAAe,MAAM,KAAKC,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAEQ,GAAG,CAACE;AAAhB,KAAd,CADnB,CAAN;AAIEX,IAAAA,IAAI,CAACY,GAAL,CACE,MAAOC,GAAP,IACE,MAAMpB,KAAK,CAACc,GAAN,CAAUM,GAAV,EAAe;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQZ,OAAQ;AADzB;AADU,KAAf,EAIHK,IAJG,CAIE,MAAOC,GAAP,IAAe;AACrB,YAAM,KAAKC,QAAL,CAAc;AAClBV,QAAAA,IAAI,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,EAAqBS,GAAG,CAACE,IAAzB;AADY,OAAd,CAAN;AAGD,KARK,CAFV;AAYD;;AACDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAqB,KAAKF,KAAhC;AACAC,IAAAA,IAAI,CAACiB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KACRD,CAAC,CAACE,gBAAF,GAAqBD,CAAC,CAACC,gBAAvB,GACI,CAAC,CADL,GAEID,CAAC,CAACC,gBAAF,GAAqBF,CAAC,CAACE,gBAAvB,GACA,CADA,GAEA,CALN;AAOA,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGpB,IAAI,CAACY,GAAL,CAAS,CAACD,IAAD,EAAOU,CAAP,kBACR,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEV,IAAhB;AAA8B,QAAA,QAAQ,EAAEV;AAAxC,SAA2BoB,CAA3B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAtDyB;;AA4DpC,eAAexB,WAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Axios from 'axios';\nimport baseURL from \"./github\";\nimport RepoCard from '.RepoCard'; \nimport {Grid} from '@material-ui/core'; \n\nclass GithubCards extends Component {\n    Title = [];\n    state = {\n        repo:[],\n        language:[],\n\n    };\n\n    async componentDidMount(){\n        const api_key = process.env.React_APP_API_KEY;\n\n        let repo = [\n            baseURL = 'Calculator',\n            baseURL = 'UnivariateLinearRegression',\n            baseURL = 'LeetCodeAlgorithmSolutions',\n            baseURL = 'MotionDetection-OpenCV',\n            baseURL = 'DrupalReact',\n            baseURL = 'Thesis-Project-Hotel-Website ',\n            baseURL = 'Fibonnacii-x86-Assembly-',\n\n        ];\n        await Axios.get(\"https://github-lang-deploy.herokuapp.com/\").then(\n            async (res) => await this.setState({ language: res.data })\n          );\n\n          repo.map(\n            async (url) =>\n              await Axios.get(url, {\n                headers: {\n                  Authorization: `token ${api_key}`,\n                },\n              }).then(async (res) => {\n                await this.setState({\n                  repo: [...this.state.repo, res.data],\n                });\n              })\n          );\n        }\n        render() {\n            const { repo, language } = this.state;\n            repo.sort((a, b) =>\n              a.stargazers_count > b.stargazers_count\n                ? -1\n                : b.stargazers_count > a.stargazers_count\n                ? 1\n                : 0\n            );\n            return (\n              <Grid container spacing={1}>\n                {repo.map((data, i) => (\n                  <RepoCard repo={data} key={i} language={language} />\n                ))}\n              </Grid>\n            );\n          }\n\n\n    \n\n}\nexport default GithubCards;\n"]},"metadata":{},"sourceType":"module"}