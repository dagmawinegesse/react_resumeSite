{"ast":null,"code":"var _jsxFileName = \"/Users/Dagi/Desktop/Web Projects/Resume Website /myresume/src/Components/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from './Button';\nimport './NavBar.css';\nimport useScroll from './useScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar() {\n  _s();\n\n  //set the initial state \n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click); //the function will reverse the current state when clicked\n\n\n  const closeMobileMenu = () => setClick(false); // add this to different tags so it will close out of the mobile menu\n\n\n  const [buttonC, setButton] = useState(true); //\n  //show button function \n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  }; //to remove resume button from appearing again when refreshed\n\n\n  useEffect(() => {\n    showButton();\n  }, []);\n  window.addEventListener('resize', showButton); // const { y, x, scrollDirection } = useScroll();  \n\n  const styles = {\n    active: {\n      visibility: \"visible\",\n      transition: \"all 0.1s\"\n    },\n    hidden: {\n      visibility: \"hidden\",\n      transition: \"all 0.5s\",\n      transform: \"translateY(-100%)\"\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // style={scrollDirection === \"down\" ? styles.active: styles.hidden}\n    _jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"navbar-logo\",\n          onClick: closeMobileMenu,\n          children: [\"Dagmawi Negesse \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fab fa-typo3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-icon\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: click ? 'fas fa-times' : 'fas fa-bars'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: click ? 'nav-menu active' : 'nav-menu',\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/projects\",\n              className: \"nav-links\",\n              onClick: closeMobileMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: buttonC && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn--outline\",\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(NavBar, \"0VUoaqZjfVgCLD/e3mNLswAlvMM=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/Dagi/Desktop/Web Projects/Resume Website /myresume/src/Components/NavBar.js"],"names":["React","useState","useEffect","Link","Button","useScroll","NavBar","click","setClick","handleClick","closeMobileMenu","buttonC","setButton","showButton","window","innerWidth","addEventListener","styles","active","visibility","transition","hidden","transform"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'; \nimport { Button } from './Button';\nimport './NavBar.css';\nimport useScroll from './useScroll'; \n\n\nfunction NavBar() {\n  //set the initial state \n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click); //the function will reverse the current state when clicked\n  const closeMobileMenu = () => setClick(false) // add this to different tags so it will close out of the mobile menu\n  const [buttonC, setButton] = useState(true);\n//\n  //show button function \n\n  const showButton = () =>{\n    if(window.innerWidth <= 960 ){\n      setButton(false); \n    }else{\n      setButton(true);\n    }\n  };\n  //to remove resume button from appearing again when refreshed\n  useEffect(() =>{\n    showButton();\n    \n  }, []);\n  window.addEventListener('resize', showButton);\n  // const { y, x, scrollDirection } = useScroll();  \n\n  const styles = {\n    active: {\n      visibility: \"visible\",\n      transition: \"all 0.1s\"\n    },\n    hidden: {\n      visibility: \"hidden\",\n      transition: \"all 0.5s\",\n      transform: \"translateY(-100%)\"\n    }\n  }\n \n  return (\n    // style={scrollDirection === \"down\" ? styles.active: styles.hidden}\n    <nav className='navbar' >\n        <div className='navbar-container'>\n          {/* add the closemobilMenu when clicked so that the menu will be closed */}\n            <Link to = \"/\" className= 'navbar-logo' onClick={closeMobileMenu}>\n                   Dagmawi Negesse <i className='fab fa-typo3'></i>\n                 </Link>\n\n                 <div className='menu-icon' onClick={handleClick}>\n                  {/** this when clicked change states */}\n                   <i className={click ? 'fas fa-times': 'fas fa-bars'}></i>\n                   </div>\n                   \n                   <ul className= {click ?'nav-menu active': 'nav-menu'}>\n                    <li className='nav-item'>\n                      {/* <Link to = '/' className='nav-links' onClick={closeMobileMenu}>\n                        Home\n                      </Link> */}\n                    </li>\n\n                    <li className='nav-item'>\n                      <Link to = '/projects' className='nav-links' onClick={closeMobileMenu}>\n                      </Link>\n                    </li>\n\n                    <li className='nav-item'>\n                      {/* <Link to = 'Resume.pdf' download target='_blank' className='nav-links-mobile' onClick={closeMobileMenu}>\n                        Resume <i class=\"fas fa-download\"></i>\n                      </Link> */}\n                    </li>\n\n\n                   </ul>\n                   {/* {buttonC && <Button buttonStyle={'btn--outline'} >\n                     Hello\n                   <i class=\"fas fa-download\"></i>\n                   </Button>} */}\n                 <div>\n                   {buttonC && \n                    <Button className = 'btn--outline'>Resume</Button>\n                   }\n                 </div>\n                   \n\n                   \n                 \n        </div>\n        \n     \n\n    </nav>\n  );\n\n  \n  \n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}